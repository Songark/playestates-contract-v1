{"id":"22c30acd7347d8bb149bc06d970ecb36","_format":"hh-sol-build-info-1","solcVersion":"0.8.4","solcLongVersion":"0.8.4+commit.c7e474f2","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/interfaces/IPefpNFT.sol":{"content":"//SPDX-License-Identifier: Unlicense\n// Creator: Dai\npragma solidity ^0.8.4;\n\ninterface IPefpNFT {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * The caller cannot approve to the current owner.\n     */\n    error ApprovalToCurrentOwner();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n    \n    //Interface\n    event Mint(address indexed operator, address indexed to, uint256 tokenId);\n    event Burn(address indexed operator, uint256 tokenID);\n    event UpdateMetadataImage(string);\n    event UpdateMetadataExternalUrl(string);\n    event UpdateMetadataAnimationUrl(string);\n    event SetupPool(address indexed operator, address pool);\n    event Locked(address indexed operator, bool locked);\n    event TradingAllowed(address indexed operator, bool allowed);\n    event MintToPool(address indexed operator, uint256 quantity);\n}\n"},"contracts/stake/PnftStaking.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"../interfaces/IPefpNFT.sol\";\r\n\r\ncontract PnftStaking is Ownable, ReentrancyGuard, IERC721Receiver {\r\n    address private _stakeNftAddress;\r\n    address private _rewardTokenAddress;\r\n    using EnumerableSet for EnumerableSet.UintSet;\r\n\r\n    struct StakerInfo {\r\n        EnumerableSet.UintSet stakedNfts;\r\n        uint256 rewards;\r\n        uint256 lastClaimDate;\r\n    }\r\n    mapping(address => StakerInfo) private _stakersInfo;\r\n\r\n    constructor(\r\n        address stakeNftAddress,\r\n        address rewardTokenAddress\r\n    ) {\r\n        _stakeNftAddress = stakeNftAddress;\r\n        _rewardTokenAddress = rewardTokenAddress;\r\n    }\r\n\r\n    function stake(uint256[] memory tokenIdList)\r\n    external \r\n    nonReentrant {\r\n\r\n    }\r\n\r\n    function withdraw(uint256[] memory tokenIdList)\r\n    external\r\n    nonReentrant {\r\n\r\n    }\r\n\r\n    function getStakerInfo(address account)\r\n    external\r\n    view returns (uint256[] memory stakedNfts, uint256 rewards, uint256 lastClaimDate) {\r\n        StakerInfo storage staker = _stakersInfo[account];\r\n        rewards = staker.rewards;\r\n        lastClaimDate = staker.lastClaimDate;\r\n        uint256 countNfts = staker.stakedNfts.length();\r\n        if (countNfts > 0) {\r\n            stakedNfts = new uint256[](countNfts);\r\n            for (uint256 index = 0; index < countNfts; index++) {\r\n                stakedNfts[index] = staker.stakedNfts.at(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    function pendingRewards()\r\n    external\r\n    view returns (uint256) {\r\n\r\n    }\r\n\r\n    function claimRewards()\r\n    external {\r\n\r\n    }\r\n\r\n    function depositLiquidity(uint256 amount)\r\n    external {\r\n\r\n    }\r\n\r\n    function onERC721Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        bytes calldata\r\n    ) public virtual override returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[206],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":207,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":206,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,206],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[166]},"id":167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":166,"linearizedBaseContracts":[166],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":118,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":166,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":121,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":166,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":166,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":130,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":166,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":138,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":142,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":147,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":166,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":166,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":167,"src":"888:1952:1","usedErrors":[]}],"src":"112:2729:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[184]},"id":185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":168,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"141:152:2","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":184,"linearizedBaseContracts":[184],"name":"IERC721Receiver","nameLocation":"304:15:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"326:493:2","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":183,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:2","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"operator","nameLocation":"867:8:2","nodeType":"VariableDeclaration","scope":183,"src":"859:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"from","nameLocation":"893:4:2","nodeType":"VariableDeclaration","scope":183,"src":"885:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:2","nodeType":"VariableDeclaration","scope":183,"src":"907:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"data","nameLocation":"947:4:2","nodeType":"VariableDeclaration","scope":183,"src":"932:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":177,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:2"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":183,"src":"976:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":180,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:2"},"scope":184,"src":"824:160:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":185,"src":"294:692:2","usedErrors":[]}],"src":"116:871:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[206]},"id":207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":186,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"111:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":206,"linearizedBaseContracts":[206],"name":"Context","nameLocation":"626:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":195,"nodeType":"Block","src":"702:34:3","statements":[{"expression":{"expression":{"id":192,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":191,"id":194,"nodeType":"Return","src":"712:17:3"}]},"id":196,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:3","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"659:2:3"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":196,"src":"693:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:3"},"scope":206,"src":"640:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":204,"nodeType":"Block","src":"809:32:3","statements":[{"expression":{"expression":{"id":201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":200,"id":203,"nodeType":"Return","src":"819:15:3"}]},"id":205,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:3","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"759:2:3"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":205,"src":"793:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:3"},"scope":206,"src":"742:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":207,"src":"608:235:3","usedErrors":[]}],"src":"86:758:3"},"id":3},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[819]},"id":820,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":208,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"230:1090:4","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":819,"linearizedBaseContracts":[819],"name":"EnumerableSet","nameLocation":"1329:13:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":217,"members":[{"constant":false,"id":212,"mutability":"mutable","name":"_values","nameLocation":"1853:7:4","nodeType":"VariableDeclaration","scope":217,"src":"1843:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1843:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":211,"nodeType":"ArrayTypeName","src":"1843:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"_indexes","nameLocation":"2021:8:4","nodeType":"VariableDeclaration","scope":217,"src":"1993:36:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":215,"keyType":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2001:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1993:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1796:3:4","nodeType":"StructDefinition","scope":819,"src":"1789:247:4","visibility":"public"},{"body":{"id":258,"nodeType":"Block","src":"2275:335:4","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2289:22:4","subExpression":{"arguments":[{"id":229,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2300:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2305:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":228,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"2290:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":256,"nodeType":"Block","src":"2567:37:4","statements":[{"expression":{"hexValue":"66616c7365","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2588:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":255,"nodeType":"Return","src":"2581:12:4"}]},"id":257,"nodeType":"IfStatement","src":"2285:319:4","trueBody":{"id":253,"nodeType":"Block","src":"2313:248:4","statements":[{"expression":{"arguments":[{"id":238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2344:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":233,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2327:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":212,"src":"2327:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2327:16:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"ExpressionStatement","src":"2327:23:4"},{"expression":{"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":241,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2485:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":216,"src":"2485:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":245,"indexExpression":{"id":243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2498:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2485:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":246,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2507:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":212,"src":"2507:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2507:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2485:40:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":250,"nodeType":"ExpressionStatement","src":"2485:40:4"},{"expression":{"hexValue":"74727565","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2546:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":252,"nodeType":"Return","src":"2539:11:4"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"2042:159:4","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":259,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2215:4:4","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"set","nameLocation":"2232:3:4","nodeType":"VariableDeclaration","scope":259,"src":"2220:15:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":220,"nodeType":"UserDefinedTypeName","pathNode":{"id":219,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":217,"src":"2220:3:4"},"referencedDeclaration":217,"src":"2220:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"value","nameLocation":"2245:5:4","nodeType":"VariableDeclaration","scope":259,"src":"2237:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2237:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2219:32:4"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":259,"src":"2269:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"2269:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2268:6:4"},"scope":819,"src":"2206:404:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":342,"nodeType":"Block","src":"2850:1316:4","statements":[{"assignments":[271],"declarations":[{"constant":false,"id":271,"mutability":"mutable","name":"valueIndex","nameLocation":"2968:10:4","nodeType":"VariableDeclaration","scope":342,"src":"2960:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2960:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":276,"initialValue":{"baseExpression":{"expression":{"id":272,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2981:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":216,"src":"2981:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2994:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2981:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2960:40:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":277,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3015:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3015:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":340,"nodeType":"Block","src":"4123:37:4","statements":[{"expression":{"hexValue":"66616c7365","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4144:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":269,"id":339,"nodeType":"Return","src":"4137:12:4"}]},"id":341,"nodeType":"IfStatement","src":"3011:1149:4","trueBody":{"id":337,"nodeType":"Block","src":"3032:1085:4","statements":[{"assignments":[281],"declarations":[{"constant":false,"id":281,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3392:13:4","nodeType":"VariableDeclaration","scope":337,"src":"3384:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":285,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":282,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3408:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3421:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3408:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3384:38:4"},{"assignments":[287],"declarations":[{"constant":false,"id":287,"mutability":"mutable","name":"lastIndex","nameLocation":"3444:9:4","nodeType":"VariableDeclaration","scope":337,"src":"3436:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":293,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":288,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3456:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":212,"src":"3456:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3456:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3477:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3456:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3436:42:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":294,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3497:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":295,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3510:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3497:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":321,"nodeType":"IfStatement","src":"3493:398:4","trueBody":{"id":320,"nodeType":"Block","src":"3525:366:4","statements":[{"assignments":[298],"declarations":[{"constant":false,"id":298,"mutability":"mutable","name":"lastValue","nameLocation":"3551:9:4","nodeType":"VariableDeclaration","scope":320,"src":"3543:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3543:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":303,"initialValue":{"baseExpression":{"expression":{"id":299,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3563:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":212,"src":"3563:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":302,"indexExpression":{"id":301,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3575:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3563:22:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3543:42:4"},{"expression":{"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":304,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3685:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":212,"src":"3685:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":308,"indexExpression":{"id":306,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3697:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3685:26:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":309,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3714:9:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3685:38:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":311,"nodeType":"ExpressionStatement","src":"3685:38:4"},{"expression":{"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":312,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3797:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":216,"src":"3797:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":316,"indexExpression":{"id":314,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3810:9:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3797:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":317,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3823:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3797:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":319,"nodeType":"ExpressionStatement","src":"3797:36:4"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":322,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3969:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":212,"src":"3969:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3969:15:4","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3969:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"3969:17:4"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4054:26:4","subExpression":{"baseExpression":{"expression":{"id":329,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"4061:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":216,"src":"4061:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":332,"indexExpression":{"id":331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"4074:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4061:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":334,"nodeType":"ExpressionStatement","src":"4054:26:4"},{"expression":{"hexValue":"74727565","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4102:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":269,"id":336,"nodeType":"Return","src":"4095:11:4"}]}}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"2616:157:4","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":343,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2787:7:4","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"set","nameLocation":"2807:3:4","nodeType":"VariableDeclaration","scope":343,"src":"2795:15:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":262,"nodeType":"UserDefinedTypeName","pathNode":{"id":261,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":217,"src":"2795:3:4"},"referencedDeclaration":217,"src":"2795:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"value","nameLocation":"2820:5:4","nodeType":"VariableDeclaration","scope":343,"src":"2812:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2812:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:32:4"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":343,"src":"2844:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":267,"name":"bool","nodeType":"ElementaryTypeName","src":"2844:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2843:6:4"},"scope":819,"src":"2778:1388:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":361,"nodeType":"Block","src":"4326:48:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":354,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"4343:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":216,"src":"4343:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":357,"indexExpression":{"id":356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4356:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4343:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4366:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4343:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":353,"id":360,"nodeType":"Return","src":"4336:31:4"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"4172:70:4","text":" @dev Returns true if the value is in the set. O(1)."},"id":362,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4256:9:4","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"set","nameLocation":"4278:3:4","nodeType":"VariableDeclaration","scope":362,"src":"4266:15:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":346,"nodeType":"UserDefinedTypeName","pathNode":{"id":345,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":217,"src":"4266:3:4"},"referencedDeclaration":217,"src":"4266:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"value","nameLocation":"4291:5:4","nodeType":"VariableDeclaration","scope":362,"src":"4283:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4283:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4265:32:4"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":362,"src":"4320:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":351,"name":"bool","nodeType":"ElementaryTypeName","src":"4320:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4319:6:4"},"scope":819,"src":"4247:127:4","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":375,"nodeType":"Block","src":"4520:42:4","statements":[{"expression":{"expression":{"expression":{"id":371,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4537:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":212,"src":"4537:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4537:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":370,"id":374,"nodeType":"Return","src":"4530:25:4"}]},"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"4380:70:4","text":" @dev Returns the number of values on the set. O(1)."},"id":376,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4464:7:4","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"set","nameLocation":"4484:3:4","nodeType":"VariableDeclaration","scope":376,"src":"4472:15:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":365,"nodeType":"UserDefinedTypeName","pathNode":{"id":364,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":217,"src":"4472:3:4"},"referencedDeclaration":217,"src":"4472:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4471:17:4"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"4511:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"4511:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4510:9:4"},"scope":819,"src":"4455:107:4","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":392,"nodeType":"Block","src":"4980:42:4","statements":[{"expression":{"baseExpression":{"expression":{"id":387,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"4997:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":212,"src":"4997:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":390,"indexExpression":{"id":389,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"5009:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4997:18:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":386,"id":391,"nodeType":"Return","src":"4990:25:4"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"4568:331:4","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":393,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4913:3:4","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"set","nameLocation":"4929:3:4","nodeType":"VariableDeclaration","scope":393,"src":"4917:15:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":379,"nodeType":"UserDefinedTypeName","pathNode":{"id":378,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":217,"src":"4917:3:4"},"referencedDeclaration":217,"src":"4917:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"index","nameLocation":"4942:5:4","nodeType":"VariableDeclaration","scope":393,"src":"4934:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4916:32:4"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":393,"src":"4971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4971:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4970:9:4"},"scope":819,"src":"4904:118:4","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":406,"nodeType":"Block","src":"5636:35:4","statements":[{"expression":{"expression":{"id":403,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5653:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":212,"src":"5653:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":402,"id":405,"nodeType":"Return","src":"5646:18:4"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"5028:529:4","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5571:7:4","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"set","nameLocation":"5591:3:4","nodeType":"VariableDeclaration","scope":407,"src":"5579:15:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":396,"nodeType":"UserDefinedTypeName","pathNode":{"id":395,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":217,"src":"5579:3:4"},"referencedDeclaration":217,"src":"5579:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5578:17:4"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"5618:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5618:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":400,"nodeType":"ArrayTypeName","src":"5618:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5617:18:4"},"scope":819,"src":"5562:109:4","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":411,"members":[{"constant":false,"id":410,"mutability":"mutable","name":"_inner","nameLocation":"5728:6:4","nodeType":"VariableDeclaration","scope":411,"src":"5724:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":409,"nodeType":"UserDefinedTypeName","pathNode":{"id":408,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":217,"src":"5724:3:4"},"referencedDeclaration":217,"src":"5724:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5703:10:4","nodeType":"StructDefinition","scope":819,"src":"5696:45:4","visibility":"public"},{"body":{"id":428,"nodeType":"Block","src":"5987:47:4","statements":[{"expression":{"arguments":[{"expression":{"id":423,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"6009:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":410,"src":"6009:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6021:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":422,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6004:4:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6004:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":421,"id":427,"nodeType":"Return","src":"5997:30:4"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"5747:159:4","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":429,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5920:3:4","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"set","nameLocation":"5943:3:4","nodeType":"VariableDeclaration","scope":429,"src":"5924:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":414,"nodeType":"UserDefinedTypeName","pathNode":{"id":413,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":411,"src":"5924:10:4"},"referencedDeclaration":411,"src":"5924:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"value","nameLocation":"5956:5:4","nodeType":"VariableDeclaration","scope":429,"src":"5948:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5948:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5923:39:4"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"5981:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"5981:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5980:6:4"},"scope":819,"src":"5911:123:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"6281:50:4","statements":[{"expression":{"arguments":[{"expression":{"id":441,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"6306:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":410,"src":"6306:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"6318:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":440,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"6298:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6298:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":439,"id":445,"nodeType":"Return","src":"6291:33:4"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"6040:157:4","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6211:6:4","nodeType":"FunctionDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"set","nameLocation":"6237:3:4","nodeType":"VariableDeclaration","scope":447,"src":"6218:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":432,"nodeType":"UserDefinedTypeName","pathNode":{"id":431,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":411,"src":"6218:10:4"},"referencedDeclaration":411,"src":"6218:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"value","nameLocation":"6250:5:4","nodeType":"VariableDeclaration","scope":447,"src":"6242:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6242:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:39:4"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"6275:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":437,"name":"bool","nodeType":"ElementaryTypeName","src":"6275:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6274:6:4"},"scope":819,"src":"6202:129:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":464,"nodeType":"Block","src":"6498:52:4","statements":[{"expression":{"arguments":[{"expression":{"id":459,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"6525:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":410,"src":"6525:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"6537:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":458,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6515:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6515:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":457,"id":463,"nodeType":"Return","src":"6508:35:4"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"6337:70:4","text":" @dev Returns true if the value is in the set. O(1)."},"id":465,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6421:8:4","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"set","nameLocation":"6449:3:4","nodeType":"VariableDeclaration","scope":465,"src":"6430:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":450,"nodeType":"UserDefinedTypeName","pathNode":{"id":449,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":411,"src":"6430:10:4"},"referencedDeclaration":411,"src":"6430:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"value","nameLocation":"6462:5:4","nodeType":"VariableDeclaration","scope":465,"src":"6454:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6454:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6429:39:4"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":465,"src":"6492:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":455,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6491:6:4"},"scope":819,"src":"6412:138:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":479,"nodeType":"Block","src":"6703:43:4","statements":[{"expression":{"arguments":[{"expression":{"id":475,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"6728:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":410,"src":"6728:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":474,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6720:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6720:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":473,"id":478,"nodeType":"Return","src":"6713:26:4"}]},"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"6556:70:4","text":" @dev Returns the number of values in the set. O(1)."},"id":480,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6640:6:4","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"set","nameLocation":"6666:3:4","nodeType":"VariableDeclaration","scope":480,"src":"6647:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":468,"nodeType":"UserDefinedTypeName","pathNode":{"id":467,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":411,"src":"6647:10:4"},"referencedDeclaration":411,"src":"6647:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6646:24:4"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"6694:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"6694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6693:9:4"},"scope":819,"src":"6631:115:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":497,"nodeType":"Block","src":"7171:46:4","statements":[{"expression":{"arguments":[{"expression":{"id":492,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"7192:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":410,"src":"7192:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":494,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"7204:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":491,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"7188:3:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7188:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":490,"id":496,"nodeType":"Return","src":"7181:29:4"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"6752:331:4","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":498,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7097:2:4","nodeType":"FunctionDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"set","nameLocation":"7119:3:4","nodeType":"VariableDeclaration","scope":498,"src":"7100:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":483,"nodeType":"UserDefinedTypeName","pathNode":{"id":482,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":411,"src":"7100:10:4"},"referencedDeclaration":411,"src":"7100:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"index","nameLocation":"7132:5:4","nodeType":"VariableDeclaration","scope":498,"src":"7124:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7099:39:4"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"7162:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7162:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7161:9:4"},"scope":819,"src":"7088:129:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":527,"nodeType":"Block","src":"7838:219:4","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"store","nameLocation":"7865:5:4","nodeType":"VariableDeclaration","scope":527,"src":"7848:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7848:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":511,"nodeType":"ArrayTypeName","src":"7848:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":517,"initialValue":{"arguments":[{"expression":{"id":514,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7881:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":410,"src":"7881:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":513,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"7873:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7873:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7848:44:4"},{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"result","nameLocation":"7919:6:4","nodeType":"VariableDeclaration","scope":527,"src":"7902:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7902:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":521,"nodeType":"ArrayTypeName","src":"7902:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":523,"nodeType":"VariableDeclarationStatement","src":"7902:23:4"},{"AST":{"nodeType":"YulBlock","src":"7988:39:4","statements":[{"nodeType":"YulAssignment","src":"8002:15:4","value":{"name":"store","nodeType":"YulIdentifier","src":"8012:5:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8002:6:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":522,"isOffset":false,"isSlot":false,"src":"8002:6:4","valueSize":1},{"declaration":512,"isOffset":false,"isSlot":false,"src":"8012:5:4","valueSize":1}],"id":524,"nodeType":"InlineAssembly","src":"7979:48:4"},{"expression":{"id":525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8044:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":507,"id":526,"nodeType":"Return","src":"8037:13:4"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"7223:529:4","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":528,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7766:6:4","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"set","nameLocation":"7792:3:4","nodeType":"VariableDeclaration","scope":528,"src":"7773:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":501,"nodeType":"UserDefinedTypeName","pathNode":{"id":500,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":411,"src":"7773:10:4"},"referencedDeclaration":411,"src":"7773:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$411_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7772:24:4"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":528,"src":"7820:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7820:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":505,"nodeType":"ArrayTypeName","src":"7820:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7819:18:4"},"scope":819,"src":"7757:300:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":532,"members":[{"constant":false,"id":531,"mutability":"mutable","name":"_inner","nameLocation":"8114:6:4","nodeType":"VariableDeclaration","scope":532,"src":"8110:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":530,"nodeType":"UserDefinedTypeName","pathNode":{"id":529,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":217,"src":"8110:3:4"},"referencedDeclaration":217,"src":"8110:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8089:10:4","nodeType":"StructDefinition","scope":819,"src":"8082:45:4","visibility":"public"},{"body":{"id":558,"nodeType":"Block","src":"8373:74:4","statements":[{"expression":{"arguments":[{"expression":{"id":544,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"8395:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":531,"src":"8395:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"8431:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":550,"name":"uint160","nodeType":"ElementaryTypeName","src":"8423:7:4","typeDescriptions":{}}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"8415:7:4","typeDescriptions":{}}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8415:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8407:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8407:7:4","typeDescriptions":{}}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8407:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":543,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8390:4:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8390:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":542,"id":557,"nodeType":"Return","src":"8383:57:4"}]},"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"8133:159:4","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":559,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8306:3:4","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"set","nameLocation":"8329:3:4","nodeType":"VariableDeclaration","scope":559,"src":"8310:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":535,"nodeType":"UserDefinedTypeName","pathNode":{"id":534,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"8310:10:4"},"referencedDeclaration":532,"src":"8310:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"value","nameLocation":"8342:5:4","nodeType":"VariableDeclaration","scope":559,"src":"8334:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"8334:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8309:39:4"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":559,"src":"8367:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":540,"name":"bool","nodeType":"ElementaryTypeName","src":"8367:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8366:6:4"},"scope":819,"src":"8297:150:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"8694:77:4","statements":[{"expression":{"arguments":[{"expression":{"id":571,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"8719:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":531,"src":"8719:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"8755:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":577,"name":"uint160","nodeType":"ElementaryTypeName","src":"8747:7:4","typeDescriptions":{}}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"8739:7:4","typeDescriptions":{}}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8731:7:4","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8731:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":570,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"8711:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8711:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":569,"id":584,"nodeType":"Return","src":"8704:60:4"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"8453:157:4","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8624:6:4","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"set","nameLocation":"8650:3:4","nodeType":"VariableDeclaration","scope":586,"src":"8631:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":562,"nodeType":"UserDefinedTypeName","pathNode":{"id":561,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"8631:10:4"},"referencedDeclaration":532,"src":"8631:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"value","nameLocation":"8663:5:4","nodeType":"VariableDeclaration","scope":586,"src":"8655:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"8655:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8630:39:4"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":586,"src":"8688:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":567,"name":"bool","nodeType":"ElementaryTypeName","src":"8688:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8687:6:4"},"scope":819,"src":"8615:156:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":612,"nodeType":"Block","src":"8938:79:4","statements":[{"expression":{"arguments":[{"expression":{"id":598,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"8965:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":531,"src":"8965:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"9001:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":604,"name":"uint160","nodeType":"ElementaryTypeName","src":"8993:7:4","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:4","typeDescriptions":{}}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8977:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8977:7:4","typeDescriptions":{}}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8977:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":597,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8955:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8955:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":596,"id":611,"nodeType":"Return","src":"8948:62:4"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"8777:70:4","text":" @dev Returns true if the value is in the set. O(1)."},"id":613,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8861:8:4","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"set","nameLocation":"8889:3:4","nodeType":"VariableDeclaration","scope":613,"src":"8870:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":589,"nodeType":"UserDefinedTypeName","pathNode":{"id":588,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"8870:10:4"},"referencedDeclaration":532,"src":"8870:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"value","nameLocation":"8902:5:4","nodeType":"VariableDeclaration","scope":613,"src":"8894:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8869:39:4"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"8932:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":594,"name":"bool","nodeType":"ElementaryTypeName","src":"8932:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8931:6:4"},"scope":819,"src":"8852:165:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":627,"nodeType":"Block","src":"9170:43:4","statements":[{"expression":{"arguments":[{"expression":{"id":623,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"9195:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":531,"src":"9195:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":622,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"9187:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9187:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":621,"id":626,"nodeType":"Return","src":"9180:26:4"}]},"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"9023:70:4","text":" @dev Returns the number of values in the set. O(1)."},"id":628,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9107:6:4","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"set","nameLocation":"9133:3:4","nodeType":"VariableDeclaration","scope":628,"src":"9114:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":616,"nodeType":"UserDefinedTypeName","pathNode":{"id":615,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"9114:10:4"},"referencedDeclaration":532,"src":"9114:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9113:24:4"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":628,"src":"9161:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"9161:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9160:9:4"},"scope":819,"src":"9098:115:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":654,"nodeType":"Block","src":"9638:73:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":646,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"9683:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":531,"src":"9683:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":648,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"9695:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":645,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"9679:3:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"9671:7:4","typeDescriptions":{}}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":641,"name":"uint160","nodeType":"ElementaryTypeName","src":"9663:7:4","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9663:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:4","typeDescriptions":{}}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9655:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":638,"id":653,"nodeType":"Return","src":"9648:56:4"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"9219:331:4","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9564:2:4","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"set","nameLocation":"9586:3:4","nodeType":"VariableDeclaration","scope":655,"src":"9567:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":631,"nodeType":"UserDefinedTypeName","pathNode":{"id":630,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"9567:10:4"},"referencedDeclaration":532,"src":"9567:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"index","nameLocation":"9599:5:4","nodeType":"VariableDeclaration","scope":655,"src":"9591:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"9591:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9566:39:4"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"9629:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"9629:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9628:9:4"},"scope":819,"src":"9555:156:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"10332:219:4","statements":[{"assignments":[669],"declarations":[{"constant":false,"id":669,"mutability":"mutable","name":"store","nameLocation":"10359:5:4","nodeType":"VariableDeclaration","scope":684,"src":"10342:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10342:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":668,"nodeType":"ArrayTypeName","src":"10342:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":674,"initialValue":{"arguments":[{"expression":{"id":671,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10375:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":531,"src":"10375:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":670,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"10367:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10367:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10342:44:4"},{"assignments":[679],"declarations":[{"constant":false,"id":679,"mutability":"mutable","name":"result","nameLocation":"10413:6:4","nodeType":"VariableDeclaration","scope":684,"src":"10396:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":678,"nodeType":"ArrayTypeName","src":"10396:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":680,"nodeType":"VariableDeclarationStatement","src":"10396:23:4"},{"AST":{"nodeType":"YulBlock","src":"10482:39:4","statements":[{"nodeType":"YulAssignment","src":"10496:15:4","value":{"name":"store","nodeType":"YulIdentifier","src":"10506:5:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10496:6:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":679,"isOffset":false,"isSlot":false,"src":"10496:6:4","valueSize":1},{"declaration":669,"isOffset":false,"isSlot":false,"src":"10506:5:4","valueSize":1}],"id":681,"nodeType":"InlineAssembly","src":"10473:48:4"},{"expression":{"id":682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"10538:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":664,"id":683,"nodeType":"Return","src":"10531:13:4"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"9717:529:4","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10260:6:4","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"set","nameLocation":"10286:3:4","nodeType":"VariableDeclaration","scope":685,"src":"10267:22:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":658,"nodeType":"UserDefinedTypeName","pathNode":{"id":657,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"10267:10:4"},"referencedDeclaration":532,"src":"10267:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$532_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10266:24:4"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"10314:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"10314:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":662,"nodeType":"ArrayTypeName","src":"10314:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10313:18:4"},"scope":819,"src":"10251:300:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":689,"members":[{"constant":false,"id":688,"mutability":"mutable","name":"_inner","nameLocation":"10602:6:4","nodeType":"VariableDeclaration","scope":689,"src":"10598:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":687,"nodeType":"UserDefinedTypeName","pathNode":{"id":686,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":217,"src":"10598:3:4"},"referencedDeclaration":217,"src":"10598:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10580:7:4","nodeType":"StructDefinition","scope":819,"src":"10573:42:4","visibility":"public"},{"body":{"id":709,"nodeType":"Block","src":"10858:56:4","statements":[{"expression":{"arguments":[{"expression":{"id":701,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10880:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":688,"src":"10880:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10900:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10892:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10892:7:4","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10892:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":700,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10875:4:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10875:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":699,"id":708,"nodeType":"Return","src":"10868:39:4"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"10621:159:4","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10794:3:4","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"set","nameLocation":"10814:3:4","nodeType":"VariableDeclaration","scope":710,"src":"10798:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":692,"nodeType":"UserDefinedTypeName","pathNode":{"id":691,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":689,"src":"10798:7:4"},"referencedDeclaration":689,"src":"10798:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"value","nameLocation":"10827:5:4","nodeType":"VariableDeclaration","scope":710,"src":"10819:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"10819:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10797:36:4"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"10852:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":697,"name":"bool","nodeType":"ElementaryTypeName","src":"10852:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10851:6:4"},"scope":819,"src":"10785:129:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":730,"nodeType":"Block","src":"11158:59:4","statements":[{"expression":{"arguments":[{"expression":{"id":722,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"11183:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":688,"src":"11183:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"11203:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11195:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11195:7:4","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11195:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":721,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"11175:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11175:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":720,"id":729,"nodeType":"Return","src":"11168:42:4"}]},"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"10920:157:4","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":731,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11091:6:4","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"set","nameLocation":"11114:3:4","nodeType":"VariableDeclaration","scope":731,"src":"11098:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":713,"nodeType":"UserDefinedTypeName","pathNode":{"id":712,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":689,"src":"11098:7:4"},"referencedDeclaration":689,"src":"11098:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"value","nameLocation":"11127:5:4","nodeType":"VariableDeclaration","scope":731,"src":"11119:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"11119:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11097:36:4"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"11152:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":718,"name":"bool","nodeType":"ElementaryTypeName","src":"11152:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11151:6:4"},"scope":819,"src":"11082:135:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":751,"nodeType":"Block","src":"11381:61:4","statements":[{"expression":{"arguments":[{"expression":{"id":743,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"11408:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":688,"src":"11408:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"11428:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11420:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11420:7:4","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11420:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":742,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"11398:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11398:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":741,"id":750,"nodeType":"Return","src":"11391:44:4"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"11223:70:4","text":" @dev Returns true if the value is in the set. O(1)."},"id":752,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11307:8:4","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"set","nameLocation":"11332:3:4","nodeType":"VariableDeclaration","scope":752,"src":"11316:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":734,"nodeType":"UserDefinedTypeName","pathNode":{"id":733,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":689,"src":"11316:7:4"},"referencedDeclaration":689,"src":"11316:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"value","nameLocation":"11345:5:4","nodeType":"VariableDeclaration","scope":752,"src":"11337:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"11337:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11315:36:4"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":752,"src":"11375:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":739,"name":"bool","nodeType":"ElementaryTypeName","src":"11375:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11374:6:4"},"scope":819,"src":"11298:144:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":766,"nodeType":"Block","src":"11592:43:4","statements":[{"expression":{"arguments":[{"expression":{"id":762,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"11617:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":688,"src":"11617:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":761,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"11609:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11609:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":760,"id":765,"nodeType":"Return","src":"11602:26:4"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"11448:70:4","text":" @dev Returns the number of values in the set. O(1)."},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11532:6:4","nodeType":"FunctionDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"set","nameLocation":"11555:3:4","nodeType":"VariableDeclaration","scope":767,"src":"11539:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":755,"nodeType":"UserDefinedTypeName","pathNode":{"id":754,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":689,"src":"11539:7:4"},"referencedDeclaration":689,"src":"11539:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11538:21:4"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"11583:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"11583:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11582:9:4"},"scope":819,"src":"11523:112:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":787,"nodeType":"Block","src":"12057:55:4","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":781,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"12086:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":688,"src":"12086:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":783,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"12098:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":780,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"12082:3:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12082:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12074:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"12074:7:4","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12074:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":777,"id":786,"nodeType":"Return","src":"12067:38:4"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"11641:331:4","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11986:2:4","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"set","nameLocation":"12005:3:4","nodeType":"VariableDeclaration","scope":788,"src":"11989:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":770,"nodeType":"UserDefinedTypeName","pathNode":{"id":769,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":689,"src":"11989:7:4"},"referencedDeclaration":689,"src":"11989:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"index","nameLocation":"12018:5:4","nodeType":"VariableDeclaration","scope":788,"src":"12010:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"12010:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11988:36:4"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"12048:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"12048:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12047:9:4"},"scope":819,"src":"11977:135:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"12730:219:4","statements":[{"assignments":[802],"declarations":[{"constant":false,"id":802,"mutability":"mutable","name":"store","nameLocation":"12757:5:4","nodeType":"VariableDeclaration","scope":817,"src":"12740:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12740:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":801,"nodeType":"ArrayTypeName","src":"12740:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":807,"initialValue":{"arguments":[{"expression":{"id":804,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"12773:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":688,"src":"12773:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$217_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":803,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"12765:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$217_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12765:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12740:44:4"},{"assignments":[812],"declarations":[{"constant":false,"id":812,"mutability":"mutable","name":"result","nameLocation":"12811:6:4","nodeType":"VariableDeclaration","scope":817,"src":"12794:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"12794:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":811,"nodeType":"ArrayTypeName","src":"12794:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":813,"nodeType":"VariableDeclarationStatement","src":"12794:23:4"},{"AST":{"nodeType":"YulBlock","src":"12880:39:4","statements":[{"nodeType":"YulAssignment","src":"12894:15:4","value":{"name":"store","nodeType":"YulIdentifier","src":"12904:5:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12894:6:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":812,"isOffset":false,"isSlot":false,"src":"12894:6:4","valueSize":1},{"declaration":802,"isOffset":false,"isSlot":false,"src":"12904:5:4","valueSize":1}],"id":814,"nodeType":"InlineAssembly","src":"12871:48:4"},{"expression":{"id":815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"12936:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":797,"id":816,"nodeType":"Return","src":"12929:13:4"}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"12118:529:4","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":818,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12661:6:4","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"set","nameLocation":"12684:3:4","nodeType":"VariableDeclaration","scope":818,"src":"12668:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":791,"nodeType":"UserDefinedTypeName","pathNode":{"id":790,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":689,"src":"12668:7:4"},"referencedDeclaration":689,"src":"12668:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12667:21:4"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"12712:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"12712:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":795,"nodeType":"ArrayTypeName","src":"12712:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12711:18:4"},"scope":819,"src":"12652:297:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":820,"src":"1321:11630:4","usedErrors":[]}],"src":"205:12747:4"},"id":4},"contracts/interfaces/IPefpNFT.sol":{"ast":{"absolutePath":"contracts/interfaces/IPefpNFT.sol","exportedSymbols":{"IPefpNFT":[911]},"id":912,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":821,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"53:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":911,"linearizedBaseContracts":[911],"name":"IPefpNFT","nameLocation":"88:8:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"103:76:5","text":" The caller must own the token or be an approved operator."},"id":824,"name":"ApprovalCallerNotOwnerNorApproved","nameLocation":"190:33:5","nodeType":"ErrorDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[],"src":"223:2:5"},"src":"184:42:5"},{"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"232:44:5","text":" The token does not exist."},"id":827,"name":"ApprovalQueryForNonexistentToken","nameLocation":"287:32:5","nodeType":"ErrorDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"319:2:5"},"src":"281:41:5"},{"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"328:66:5","text":" The caller cannot approve to their own address."},"id":830,"name":"ApproveToCaller","nameLocation":"405:15:5","nodeType":"ErrorDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"420:2:5"},"src":"399:24:5"},{"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"429:66:5","text":" The caller cannot approve to the current owner."},"id":833,"name":"ApprovalToCurrentOwner","nameLocation":"506:22:5","nodeType":"ErrorDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"528:2:5"},"src":"500:31:5"},{"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"537:65:5","text":" Cannot query the balance for the zero address."},"id":836,"name":"BalanceQueryForZeroAddress","nameLocation":"613:26:5","nodeType":"ErrorDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"639:2:5"},"src":"607:35:5"},{"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"648:51:5","text":" Cannot mint to the zero address."},"id":839,"name":"MintToZeroAddress","nameLocation":"710:17:5","nodeType":"ErrorDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[],"src":"727:2:5"},"src":"704:26:5"},{"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"736:72:5","text":" The quantity of tokens minted must be more than zero."},"id":842,"name":"MintZeroQuantity","nameLocation":"819:16:5","nodeType":"ErrorDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"835:2:5"},"src":"813:25:5"},{"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"844:44:5","text":" The token does not exist."},"id":845,"name":"OwnerQueryForNonexistentToken","nameLocation":"899:29:5","nodeType":"ErrorDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"928:2:5"},"src":"893:38:5"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"937:76:5","text":" The caller must own the token or be an approved operator."},"id":848,"name":"TransferCallerNotOwnerNorApproved","nameLocation":"1024:33:5","nodeType":"ErrorDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"1057:2:5"},"src":"1018:42:5"},{"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"1066:53:5","text":" The token must be owned by `from`."},"id":851,"name":"TransferFromIncorrectOwner","nameLocation":"1130:26:5","nodeType":"ErrorDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"1156:2:5"},"src":"1124:35:5"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"1165:109:5","text":" Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."},"id":854,"name":"TransferToNonERC721ReceiverImplementer","nameLocation":"1285:38:5","nodeType":"ErrorDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[],"src":"1323:2:5"},"src":"1279:47:5"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1332:55:5","text":" Cannot transfer to the zero address."},"id":857,"name":"TransferToZeroAddress","nameLocation":"1398:21:5","nodeType":"ErrorDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[],"src":"1419:2:5"},"src":"1392:30:5"},{"documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"1428:44:5","text":" The token does not exist."},"id":860,"name":"URIQueryForNonexistentToken","nameLocation":"1483:27:5","nodeType":"ErrorDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"1510:2:5"},"src":"1477:36:5"},{"anonymous":false,"id":868,"name":"Mint","nameLocation":"1545:4:5","nodeType":"EventDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1566:8:5","nodeType":"VariableDeclaration","scope":868,"src":"1550:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1550:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1592:2:5","nodeType":"VariableDeclaration","scope":868,"src":"1576:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"1576:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1604:7:5","nodeType":"VariableDeclaration","scope":868,"src":"1596:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:63:5"},"src":"1539:74:5"},{"anonymous":false,"id":874,"name":"Burn","nameLocation":"1624:4:5","nodeType":"EventDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1645:8:5","nodeType":"VariableDeclaration","scope":874,"src":"1629:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"1629:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"indexed":false,"mutability":"mutable","name":"tokenID","nameLocation":"1663:7:5","nodeType":"VariableDeclaration","scope":874,"src":"1655:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1655:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1628:43:5"},"src":"1618:54:5"},{"anonymous":false,"id":878,"name":"UpdateMetadataImage","nameLocation":"1683:19:5","nodeType":"EventDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":878,"src":"1703:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":875,"name":"string","nodeType":"ElementaryTypeName","src":"1703:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1702:8:5"},"src":"1677:34:5"},{"anonymous":false,"id":882,"name":"UpdateMetadataExternalUrl","nameLocation":"1722:25:5","nodeType":"EventDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"1748:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":879,"name":"string","nodeType":"ElementaryTypeName","src":"1748:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1747:8:5"},"src":"1716:40:5"},{"anonymous":false,"id":886,"name":"UpdateMetadataAnimationUrl","nameLocation":"1767:26:5","nodeType":"EventDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"1794:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":883,"name":"string","nodeType":"ElementaryTypeName","src":"1794:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1793:8:5"},"src":"1761:41:5"},{"anonymous":false,"id":892,"name":"SetupPool","nameLocation":"1813:9:5","nodeType":"EventDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1839:8:5","nodeType":"VariableDeclaration","scope":892,"src":"1823:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"1823:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1857:4:5","nodeType":"VariableDeclaration","scope":892,"src":"1849:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1822:40:5"},"src":"1807:56:5"},{"anonymous":false,"id":898,"name":"Locked","nameLocation":"1874:6:5","nodeType":"EventDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1897:8:5","nodeType":"VariableDeclaration","scope":898,"src":"1881:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"indexed":false,"mutability":"mutable","name":"locked","nameLocation":"1912:6:5","nodeType":"VariableDeclaration","scope":898,"src":"1907:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":895,"name":"bool","nodeType":"ElementaryTypeName","src":"1907:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1880:39:5"},"src":"1868:52:5"},{"anonymous":false,"id":904,"name":"TradingAllowed","nameLocation":"1931:14:5","nodeType":"EventDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1962:8:5","nodeType":"VariableDeclaration","scope":904,"src":"1946:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"1946:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"indexed":false,"mutability":"mutable","name":"allowed","nameLocation":"1977:7:5","nodeType":"VariableDeclaration","scope":904,"src":"1972:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":901,"name":"bool","nodeType":"ElementaryTypeName","src":"1972:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1945:40:5"},"src":"1925:61:5"},{"anonymous":false,"id":910,"name":"MintToPool","nameLocation":"1997:10:5","nodeType":"EventDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"2024:8:5","nodeType":"VariableDeclaration","scope":910,"src":"2008:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"2042:8:5","nodeType":"VariableDeclaration","scope":910,"src":"2034:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:44:5"},"src":"1991:61:5"}],"scope":912,"src":"78:1976:5","usedErrors":[824,827,830,833,836,839,842,845,848,851,854,857,860]}],"src":"53:2002:5"},"id":5},"contracts/stake/PnftStaking.sol":{"ast":{"absolutePath":"contracts/stake/PnftStaking.sol","exportedSymbols":{"Context":[206],"EnumerableSet":[819],"IERC721Receiver":[184],"IPefpNFT":[911],"Ownable":[112],"PnftStaking":[1087],"ReentrancyGuard":[166]},"id":1088,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":913,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"33:23:6"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1088,"sourceUnit":113,"src":"60:52:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1088,"sourceUnit":820,"src":"114:65:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1088,"sourceUnit":167,"src":"181:62:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":917,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1088,"sourceUnit":185,"src":"245:66:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPefpNFT.sol","file":"../interfaces/IPefpNFT.sol","id":918,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1088,"sourceUnit":912,"src":"313:36:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":919,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"377:7:6"},"id":920,"nodeType":"InheritanceSpecifier","src":"377:7:6"},{"baseName":{"id":921,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":166,"src":"386:15:6"},"id":922,"nodeType":"InheritanceSpecifier","src":"386:15:6"},{"baseName":{"id":923,"name":"IERC721Receiver","nodeType":"IdentifierPath","referencedDeclaration":184,"src":"403:15:6"},"id":924,"nodeType":"InheritanceSpecifier","src":"403:15:6"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1087,"linearizedBaseContracts":[1087,184,166,112,206],"name":"PnftStaking","nameLocation":"362:11:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":926,"mutability":"mutable","name":"_stakeNftAddress","nameLocation":"442:16:6","nodeType":"VariableDeclaration","scope":1087,"src":"426:32:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":928,"mutability":"mutable","name":"_rewardTokenAddress","nameLocation":"481:19:6","nodeType":"VariableDeclaration","scope":1087,"src":"465:35:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"465:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":932,"libraryName":{"id":929,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":819,"src":"513:13:6"},"nodeType":"UsingForDirective","src":"507:46:6","typeName":{"id":931,"nodeType":"UserDefinedTypeName","pathNode":{"id":930,"name":"EnumerableSet.UintSet","nodeType":"IdentifierPath","referencedDeclaration":689,"src":"531:21:6"},"referencedDeclaration":689,"src":"531:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"}}},{"canonicalName":"PnftStaking.StakerInfo","id":940,"members":[{"constant":false,"id":935,"mutability":"mutable","name":"stakedNfts","nameLocation":"612:10:6","nodeType":"VariableDeclaration","scope":940,"src":"590:32:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":934,"nodeType":"UserDefinedTypeName","pathNode":{"id":933,"name":"EnumerableSet.UintSet","nodeType":"IdentifierPath","referencedDeclaration":689,"src":"590:21:6"},"referencedDeclaration":689,"src":"590:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"rewards","nameLocation":"641:7:6","nodeType":"VariableDeclaration","scope":940,"src":"633:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"633:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"lastClaimDate","nameLocation":"667:13:6","nodeType":"VariableDeclaration","scope":940,"src":"659:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakerInfo","nameLocation":"568:10:6","nodeType":"StructDefinition","scope":1087,"src":"561:127:6","visibility":"public"},{"constant":false,"id":945,"mutability":"mutable","name":"_stakersInfo","nameLocation":"733:12:6","nodeType":"VariableDeclaration","scope":1087,"src":"694:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$940_storage_$","typeString":"mapping(address => struct PnftStaking.StakerInfo)"},"typeName":{"id":944,"keyType":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"694:30:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$940_storage_$","typeString":"mapping(address => struct PnftStaking.StakerInfo)"},"valueType":{"id":943,"nodeType":"UserDefinedTypeName","pathNode":{"id":942,"name":"StakerInfo","nodeType":"IdentifierPath","referencedDeclaration":940,"src":"713:10:6"},"referencedDeclaration":940,"src":"713:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$940_storage_ptr","typeString":"struct PnftStaking.StakerInfo"}}},"visibility":"private"},{"body":{"id":960,"nodeType":"Block","src":"844:104:6","statements":[{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":952,"name":"_stakeNftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"855:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":953,"name":"stakeNftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"874:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"855:34:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":955,"nodeType":"ExpressionStatement","src":"855:34:6"},{"expression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":956,"name":"_rewardTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"900:19:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":957,"name":"rewardTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"922:18:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"900:40:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":959,"nodeType":"ExpressionStatement","src":"900:40:6"}]},"id":961,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"stakeNftAddress","nameLocation":"784:15:6","nodeType":"VariableDeclaration","scope":961,"src":"776:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"rewardTokenAddress","nameLocation":"818:18:6","nodeType":"VariableDeclaration","scope":961,"src":"810:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"810:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"765:78:6"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"844:0:6"},"scope":1087,"src":"754:194:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":969,"nodeType":"Block","src":"1034:10:6","statements":[]},"functionSelector":"0fbf0a93","id":970,"implemented":true,"kind":"function","modifiers":[{"id":967,"kind":"modifierInvocation","modifierName":{"id":966,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":142,"src":"1021:12:6"},"nodeType":"ModifierInvocation","src":"1021:12:6"}],"name":"stake","nameLocation":"965:5:6","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"tokenIdList","nameLocation":"988:11:6","nodeType":"VariableDeclaration","scope":970,"src":"971:28:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":963,"nodeType":"ArrayTypeName","src":"971:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"970:30:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"1034:0:6"},"scope":1087,"src":"956:88:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":978,"nodeType":"Block","src":"1132:10:6","statements":[]},"functionSelector":"983d95ce","id":979,"implemented":true,"kind":"function","modifiers":[{"id":976,"kind":"modifierInvocation","modifierName":{"id":975,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":142,"src":"1119:12:6"},"nodeType":"ModifierInvocation","src":"1119:12:6"}],"name":"withdraw","nameLocation":"1061:8:6","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"tokenIdList","nameLocation":"1087:11:6","nodeType":"VariableDeclaration","scope":979,"src":"1070:28:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":972,"nodeType":"ArrayTypeName","src":"1070:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1069:30:6"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[],"src":"1132:0:6"},"scope":1087,"src":"1052:90:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1050,"nodeType":"Block","src":"1292:448:6","statements":[{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"staker","nameLocation":"1322:6:6","nodeType":"VariableDeclaration","scope":1050,"src":"1303:25:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$940_storage_ptr","typeString":"struct PnftStaking.StakerInfo"},"typeName":{"id":992,"nodeType":"UserDefinedTypeName","pathNode":{"id":991,"name":"StakerInfo","nodeType":"IdentifierPath","referencedDeclaration":940,"src":"1303:10:6"},"referencedDeclaration":940,"src":"1303:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$940_storage_ptr","typeString":"struct PnftStaking.StakerInfo"}},"visibility":"internal"}],"id":997,"initialValue":{"baseExpression":{"id":994,"name":"_stakersInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"1331:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$940_storage_$","typeString":"mapping(address => struct PnftStaking.StakerInfo storage ref)"}},"id":996,"indexExpression":{"id":995,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"1344:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1331:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$940_storage","typeString":"struct PnftStaking.StakerInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1303:49:6"},{"expression":{"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":998,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"1363:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":999,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1373:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$940_storage_ptr","typeString":"struct PnftStaking.StakerInfo storage pointer"}},"id":1000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":937,"src":"1373:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1363:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1002,"nodeType":"ExpressionStatement","src":"1363:24:6"},{"expression":{"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1003,"name":"lastClaimDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"1398:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1004,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1414:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$940_storage_ptr","typeString":"struct PnftStaking.StakerInfo storage pointer"}},"id":1005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastClaimDate","nodeType":"MemberAccess","referencedDeclaration":939,"src":"1414:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1398:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1007,"nodeType":"ExpressionStatement","src":"1398:36:6"},{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"countNfts","nameLocation":"1453:9:6","nodeType":"VariableDeclaration","scope":1050,"src":"1445:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1445:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1014,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1010,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1465:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$940_storage_ptr","typeString":"struct PnftStaking.StakerInfo storage pointer"}},"id":1011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakedNfts","nodeType":"MemberAccess","referencedDeclaration":935,"src":"1465:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":767,"src":"1465:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$689_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$689_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1465:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1445:46:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1015,"name":"countNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"1506:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1518:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1506:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"IfStatement","src":"1502:231:6","trueBody":{"id":1048,"nodeType":"Block","src":"1521:212:6","statements":[{"expression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1018,"name":"stakedNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"1536:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1022,"name":"countNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"1563:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1549:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1020,"nodeType":"ArrayTypeName","src":"1553:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1549:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"1536:37:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1025,"nodeType":"ExpressionStatement","src":"1536:37:6"},{"body":{"id":1046,"nodeType":"Block","src":"1640:82:6","statements":[{"expression":{"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1036,"name":"stakedNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"1659:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1038,"indexExpression":{"id":1037,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1670:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1659:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1042,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1700:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1039,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1679:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$940_storage_ptr","typeString":"struct PnftStaking.StakerInfo storage pointer"}},"id":1040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakedNfts","nodeType":"MemberAccess","referencedDeclaration":935,"src":"1679:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$689_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":788,"src":"1679:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$689_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$689_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1679:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1659:47:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1045,"nodeType":"ExpressionStatement","src":"1659:47:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1612:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1031,"name":"countNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"1620:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1612:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1047,"initializationExpression":{"assignments":[1027],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"index","nameLocation":"1601:5:6","nodeType":"VariableDeclaration","scope":1047,"src":"1593:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1029,"initialValue":{"hexValue":"30","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1609:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1593:17:6"},"loopExpression":{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1631:7:6","subExpression":{"id":1033,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1631:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"1631:7:6"},"nodeType":"ForStatement","src":"1588:134:6"}]}}]},"functionSelector":"733bdef0","id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"getStakerInfo","nameLocation":"1159:13:6","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"account","nameLocation":"1181:7:6","nodeType":"VariableDeclaration","scope":1051,"src":"1173:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1172:17:6"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"stakedNfts","nameLocation":"1240:10:6","nodeType":"VariableDeclaration","scope":1051,"src":"1223:27:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":984,"nodeType":"ArrayTypeName","src":"1223:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"rewards","nameLocation":"1260:7:6","nodeType":"VariableDeclaration","scope":1051,"src":"1252:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1252:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"lastClaimDate","nameLocation":"1277:13:6","nodeType":"VariableDeclaration","scope":1051,"src":"1269:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1269:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:69:6"},"scope":1087,"src":"1150:590:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1056,"nodeType":"Block","src":"1816:10:6","statements":[]},"functionSelector":"eded3fda","id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRewards","nameLocation":"1757:14:6","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[],"src":"1771:2:6"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1057,"src":"1807:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1807:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1806:9:6"},"scope":1087,"src":"1748:78:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1060,"nodeType":"Block","src":"1872:10:6","statements":[]},"functionSelector":"372500ab","id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"claimRewards","nameLocation":"1843:12:6","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[],"src":"1855:2:6"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[],"src":"1872:0:6"},"scope":1087,"src":"1834:48:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1066,"nodeType":"Block","src":"1946:10:6","statements":[]},"functionSelector":"76d58e1a","id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"depositLiquidity","nameLocation":"1899:16:6","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"amount","nameLocation":"1924:6:6","nodeType":"VariableDeclaration","scope":1067,"src":"1916:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1916:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1915:16:6"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"1946:0:6"},"scope":1087,"src":"1890:66:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[183],"body":{"id":1085,"nodeType":"Block","src":"2117:56:6","statements":[{"expression":{"expression":{"expression":{"id":1081,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2135:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_PnftStaking_$1087","typeString":"contract PnftStaking"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1086,"src":"2135:21:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2135:30:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1080,"id":1084,"nodeType":"Return","src":"2128:37:6"}]},"functionSelector":"150b7a02","id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"1973:16:6","nodeType":"FunctionDefinition","overrides":{"id":1077,"nodeType":"OverrideSpecifier","overrides":[],"src":"2091:8:6"},"parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"2000:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"2000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"2018:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"2036:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"2036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"2054:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1074,"name":"bytes","nodeType":"ElementaryTypeName","src":"2054:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1989:86:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"2109:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1078,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2109:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2108:8:6"},"scope":1087,"src":"1964:209:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1088,"src":"353:1823:6","usedErrors":[]}],"src":"33:2143:6"},"id":6}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f108dfb6ad5bf82dac8f6ec847fb8f5f9a88f3b1ce77972a62d17ef161370f364736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x108DFB6AD5BF82DAC8F6EC847FB8F5F9 0xA8 DUP16 EXTCODESIZE SHR 0xE7 PUSH26 0x72A62D17EF161370F364736F6C63430008040033000000000000 ","sourceMap":"1321:11630:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1321:11630:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f108dfb6ad5bf82dac8f6ec847fb8f5f9a88f3b1ce77972a62d17ef161370f364736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x108DFB6AD5BF82DAC8F6EC847FB8F5F9 0xA8 DUP16 EXTCODESIZE SHR 0xE7 PUSH26 0x72A62D17EF161370F364736F6C63430008040033000000000000 ","sourceMap":"1321:11630:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}"}},"contracts/interfaces/IPefpNFT.sol":{"IPefpNFT":{"abi":[{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"ApprovalToCurrentOwner","type":"error"},{"inputs":[],"name":"ApproveToCaller","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenID","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"locked","type":"bool"}],"name":"Locked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"MintToPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"SetupPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"allowed","type":"bool"}],"name":"TradingAllowed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"","type":"string"}],"name":"UpdateMetadataAnimationUrl","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"","type":"string"}],"name":"UpdateMetadataExternalUrl","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"","type":"string"}],"name":"UpdateMetadataImage","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"MintToPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"SetupPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"TradingAllowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"UpdateMetadataAnimationUrl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"UpdateMetadataExternalUrl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"UpdateMetadataImage\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPefpNFT.sol\":\"IPefpNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPefpNFT.sol\":{\"keccak256\":\"0x73884fff62fbd5aec98c00e8bed7865d86b7002a6e8d9e0d466c2cfbd78ebb05\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://207a9a7b96096ef8a43fc5505f0edb682386ba327e0a5cb3fddd70578a10d678\",\"dweb:/ipfs/QmWdKXhDcUCszbSi5BwWv2Xsa34i9qU26BuasWWP7oovWA\"]}},\"version\":1}"}},"contracts/stake/PnftStaking.sol":{"PnftStaking":{"abi":[{"inputs":[{"internalType":"address","name":"stakeNftAddress","type":"address"},{"internalType":"address","name":"rewardTokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getStakerInfo","outputs":[{"internalType":"uint256[]","name":"stakedNfts","type":"uint256[]"},{"internalType":"uint256","name":"rewards","type":"uint256"},{"internalType":"uint256","name":"lastClaimDate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIdList","type":"uint256[]"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIdList","type":"uint256[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:501:7","statements":[{"nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:7","statements":[{"nodeType":"YulAssignment","src":"84:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:7"},"nodeType":"YulFunctionCall","src":"93:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:7"}]},{"body":{"nodeType":"YulBlock","src":"169:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:7"},"nodeType":"YulFunctionCall","src":"171:12:7"},"nodeType":"YulExpressionStatement","src":"171:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:7"},"nodeType":"YulFunctionCall","src":"150:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:7"},"nodeType":"YulFunctionCall","src":"146:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:7"},"nodeType":"YulFunctionCall","src":"135:31:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:7"},"nodeType":"YulFunctionCall","src":"125:42:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:7"},"nodeType":"YulFunctionCall","src":"118:50:7"},"nodeType":"YulIf","src":"115:2:7"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:7","type":""}],"src":"14:177:7"},{"body":{"nodeType":"YulBlock","src":"294:205:7","statements":[{"body":{"nodeType":"YulBlock","src":"340:26:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"349:6:7"},{"name":"value0","nodeType":"YulIdentifier","src":"357:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:7"},"nodeType":"YulFunctionCall","src":"342:22:7"},"nodeType":"YulExpressionStatement","src":"342:22:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:7"},"nodeType":"YulFunctionCall","src":"311:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:7"},"nodeType":"YulFunctionCall","src":"307:32:7"},"nodeType":"YulIf","src":"304:2:7"},{"nodeType":"YulAssignment","src":"375:50:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:7"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"385:29:7"},"nodeType":"YulFunctionCall","src":"385:40:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"375:6:7"}]},{"nodeType":"YulAssignment","src":"434:59:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"478:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"489:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:7"},"nodeType":"YulFunctionCall","src":"474:18:7"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"444:29:7"},"nodeType":"YulFunctionCall","src":"444:49:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"434:6:7"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:7","type":""}],"src":"196:303:7"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516107d43803806107d483398101604081905261002f916100d9565b6100383361006d565b60018055600280546001600160a01b039384166001600160a01b0319918216179091556003805492909316911617905561010b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d457600080fd5b919050565b600080604083850312156100eb578182fd5b6100f4836100bd565b9150610102602084016100bd565b90509250929050565b6106ba8061011a6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806376d58e1a1161006657806376d58e1a1461011f5780638da5cb5b14610130578063983d95ce146100a3578063eded3fda1461014b578063f2fde38b1461015a57600080fd5b80630fbf0a93146100a3578063150b7a02146100b8578063372500ab146100b6578063715018a6146100f5578063733bdef0146100fd575b600080fd5b6100b66100b1366004610522565b61016d565b005b6100d76100c636600461048c565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100b6610180565b61011061010b366004610472565b610192565b6040516100ec939291906105fa565b6100b661012d3660046105e2565b50565b6000546040516001600160a01b0390911681526020016100ec565b604051600081526020016100ec565b6100b6610168366004610472565b61027c565b6101756102f7565b61012d60018055565b565b610188610351565b61017e60006103ab565b6001600160a01b038116600090815260046020526040812060028101546003820154606093919290916101c4826103fb565b90508015610273578067ffffffffffffffff8111156101f357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50945060005b8181101561027157610234838261040b565b86828151811061025457634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061026981610647565b915050610222565b505b50509193909250565b610284610351565b6001600160a01b0381166102ee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61012d816103ab565b6002600154141561034a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102e5565b6002600155565b6000546001600160a01b0316331461017e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102e5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610405825490565b92915050565b6000610417838361041e565b9392505050565b600082600001828154811061044357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b80356001600160a01b038116811461046d57600080fd5b919050565b600060208284031215610483578081fd5b61041782610456565b6000806000806000608086880312156104a3578081fd5b6104ac86610456565b94506104ba60208701610456565b935060408601359250606086013567ffffffffffffffff808211156104dd578283fd5b818801915088601f8301126104f0578283fd5b8135818111156104fe578384fd5b89602082850101111561050f578384fd5b9699959850939650602001949392505050565b60006020808385031215610534578182fd5b823567ffffffffffffffff8082111561054b578384fd5b818501915085601f83011261055e578384fd5b8135818111156105705761057061066e565b8060051b604051601f19603f830116810181811085821117156105955761059561066e565b604052828152858101935084860182860187018a10156105b3578788fd5b8795505b838610156105d55780358552600195909501949386019386016105b7565b5098975050505050505050565b6000602082840312156105f3578081fd5b5035919050565b606080825284519082018190526000906020906080840190828801845b8281101561063357815184529284019290840190600101610617565b505050908301949094525060400152919050565b600060001982141561066757634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212209a0526ddc2852816c7d8edc36b6d4eac6f0e01094cb39596423f1ceaced69fc964736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7D4 CODESIZE SUB DUP1 PUSH2 0x7D4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x6D JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x10B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF4 DUP4 PUSH2 0xBD JUMP JUMPDEST SWAP2 POP PUSH2 0x102 PUSH1 0x20 DUP5 ADD PUSH2 0xBD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x6BA DUP1 PUSH2 0x11A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76D58E1A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x76D58E1A EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x983D95CE EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xEDED3FDA EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFBF0A93 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x733BDEF0 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x16D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x48C JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x472 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEC JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x472 JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x188 PUSH2 0x351 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x0 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1C4 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x273 JUMPI DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x271 JUMPI PUSH2 0x234 DUP4 DUP3 PUSH2 0x40B JUMP JUMPDEST DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x254 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x269 DUP2 PUSH2 0x647 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x222 JUMP JUMPDEST POP JUMPDEST POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x284 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D DUP2 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 DUP3 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 DUP4 DUP4 PUSH2 0x41E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x443 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x483 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x417 DUP3 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4A3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4AC DUP7 PUSH2 0x456 JUMP JUMPDEST SWAP5 POP PUSH2 0x4BA PUSH1 0x20 DUP8 ADD PUSH2 0x456 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4DD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F0 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4FE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x50F JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x534 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x54B JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x55E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x570 PUSH2 0x66E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x595 JUMPI PUSH2 0x595 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x5B3 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x5D5 JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x5B7 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x633 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x617 JUMP JUMPDEST POP POP POP SWAP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x667 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 SDIV 0x26 0xDD 0xC2 DUP6 0x28 AND 0xC7 0xD8 0xED 0xC3 PUSH12 0x6D4EAC6F0E01094CB3959642 EXTCODEHASH SHR 0xEA 0xCE 0xD6 SWAP16 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"353:1823:6:-:0;;;754:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:3;936:18:0;:32::i;:::-;1716:1:1;1821:22;;855:16:6;:34;;-1:-1:-1;;;;;855:34:6;;;-1:-1:-1;;;;;;855:34:6;;;;;;;900:19;:40;;;;;;;;;;;353:1823;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:303::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:2;;;357:6;349;342:22;304:2;385:40;415:9;385:40;:::i;:::-;375:50;;444:49;489:2;478:9;474:18;444:49;:::i;:::-;434:59;;294:205;;;;;:::o;:::-;353:1823:6;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5507:7","statements":[{"nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:7","statements":[{"nodeType":"YulAssignment","src":"73:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:7"},"nodeType":"YulFunctionCall","src":"82:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:7"}]},{"body":{"nodeType":"YulBlock","src":"165:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:7"},"nodeType":"YulFunctionCall","src":"167:12:7"},"nodeType":"YulExpressionStatement","src":"167:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:7"},"nodeType":"YulFunctionCall","src":"146:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:7"},"nodeType":"YulFunctionCall","src":"142:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:7"},"nodeType":"YulFunctionCall","src":"131:31:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:7"},"nodeType":"YulFunctionCall","src":"121:42:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:7"},"nodeType":"YulFunctionCall","src":"114:50:7"},"nodeType":"YulIf","src":"111:2:7"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:7","type":""}],"src":"14:173:7"},{"body":{"nodeType":"YulBlock","src":"262:126:7","statements":[{"body":{"nodeType":"YulBlock","src":"308:26:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"317:6:7"},{"name":"value0","nodeType":"YulIdentifier","src":"325:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:7"},"nodeType":"YulFunctionCall","src":"310:22:7"},"nodeType":"YulExpressionStatement","src":"310:22:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:7"},"nodeType":"YulFunctionCall","src":"279:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:7"},"nodeType":"YulFunctionCall","src":"275:32:7"},"nodeType":"YulIf","src":"272:2:7"},{"nodeType":"YulAssignment","src":"343:39:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"372:9:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"353:18:7"},"nodeType":"YulFunctionCall","src":"353:29:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"343:6:7"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:7","type":""}],"src":"192:196:7"},{"body":{"nodeType":"YulBlock","src":"533:718:7","statements":[{"body":{"nodeType":"YulBlock","src":"580:26:7","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"589:6:7"},{"name":"value4","nodeType":"YulIdentifier","src":"597:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"582:6:7"},"nodeType":"YulFunctionCall","src":"582:22:7"},"nodeType":"YulExpressionStatement","src":"582:22:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"554:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"563:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"550:3:7"},"nodeType":"YulFunctionCall","src":"550:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"575:3:7","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"546:3:7"},"nodeType":"YulFunctionCall","src":"546:33:7"},"nodeType":"YulIf","src":"543:2:7"},{"nodeType":"YulAssignment","src":"615:39:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"644:9:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"625:18:7"},"nodeType":"YulFunctionCall","src":"625:29:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"615:6:7"}]},{"nodeType":"YulAssignment","src":"663:48:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"696:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"707:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"692:3:7"},"nodeType":"YulFunctionCall","src":"692:18:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"673:18:7"},"nodeType":"YulFunctionCall","src":"673:38:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"663:6:7"}]},{"nodeType":"YulAssignment","src":"720:42:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"747:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"758:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"743:3:7"},"nodeType":"YulFunctionCall","src":"743:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"730:12:7"},"nodeType":"YulFunctionCall","src":"730:32:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"720:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"771:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"802:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"813:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"798:3:7"},"nodeType":"YulFunctionCall","src":"798:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"785:12:7"},"nodeType":"YulFunctionCall","src":"785:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"775:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"826:28:7","value":{"kind":"number","nodeType":"YulLiteral","src":"836:18:7","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"830:2:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"881:26:7","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"890:6:7"},{"name":"value4","nodeType":"YulIdentifier","src":"898:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"883:6:7"},"nodeType":"YulFunctionCall","src":"883:22:7"},"nodeType":"YulExpressionStatement","src":"883:22:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"869:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"877:2:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"866:2:7"},"nodeType":"YulFunctionCall","src":"866:14:7"},"nodeType":"YulIf","src":"863:2:7"},{"nodeType":"YulVariableDeclaration","src":"916:32:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"930:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"941:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"926:3:7"},"nodeType":"YulFunctionCall","src":"926:22:7"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"920:2:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"996:26:7","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1005:6:7"},{"name":"value4","nodeType":"YulIdentifier","src":"1013:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"998:6:7"},"nodeType":"YulFunctionCall","src":"998:22:7"},"nodeType":"YulExpressionStatement","src":"998:22:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"975:2:7"},{"kind":"number","nodeType":"YulLiteral","src":"979:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"971:3:7"},"nodeType":"YulFunctionCall","src":"971:13:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"986:7:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"967:3:7"},"nodeType":"YulFunctionCall","src":"967:27:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"960:6:7"},"nodeType":"YulFunctionCall","src":"960:35:7"},"nodeType":"YulIf","src":"957:2:7"},{"nodeType":"YulVariableDeclaration","src":"1031:30:7","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1058:2:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1045:12:7"},"nodeType":"YulFunctionCall","src":"1045:16:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1035:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1088:26:7","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1097:6:7"},{"name":"value4","nodeType":"YulIdentifier","src":"1105:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1090:6:7"},"nodeType":"YulFunctionCall","src":"1090:22:7"},"nodeType":"YulExpressionStatement","src":"1090:22:7"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1076:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"1084:2:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1073:2:7"},"nodeType":"YulFunctionCall","src":"1073:14:7"},"nodeType":"YulIf","src":"1070:2:7"},{"body":{"nodeType":"YulBlock","src":"1164:26:7","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1173:6:7"},{"name":"value4","nodeType":"YulIdentifier","src":"1181:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1166:6:7"},"nodeType":"YulFunctionCall","src":"1166:22:7"},"nodeType":"YulExpressionStatement","src":"1166:22:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1137:2:7"},{"name":"length","nodeType":"YulIdentifier","src":"1141:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1133:3:7"},"nodeType":"YulFunctionCall","src":"1133:15:7"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1129:3:7"},"nodeType":"YulFunctionCall","src":"1129:24:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1155:7:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1126:2:7"},"nodeType":"YulFunctionCall","src":"1126:37:7"},"nodeType":"YulIf","src":"1123:2:7"},{"nodeType":"YulAssignment","src":"1199:21:7","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1213:2:7"},{"kind":"number","nodeType":"YulLiteral","src":"1217:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1209:3:7"},"nodeType":"YulFunctionCall","src":"1209:11:7"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1199:6:7"}]},{"nodeType":"YulAssignment","src":"1229:16:7","value":{"name":"length","nodeType":"YulIdentifier","src":"1239:6:7"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1229:6:7"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"467:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"478:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"490:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"498:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"506:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"514:6:7","type":""},{"name":"value4","nodeType":"YulTypedName","src":"522:6:7","type":""}],"src":"393:858:7"},{"body":{"nodeType":"YulBlock","src":"1351:1076:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1361:12:7","value":{"kind":"number","nodeType":"YulLiteral","src":"1371:2:7","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1365:2:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1418:26:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1427:6:7"},{"name":"value0","nodeType":"YulIdentifier","src":"1435:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1420:6:7"},"nodeType":"YulFunctionCall","src":"1420:22:7"},"nodeType":"YulExpressionStatement","src":"1420:22:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1393:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1389:3:7"},"nodeType":"YulFunctionCall","src":"1389:23:7"},{"name":"_1","nodeType":"YulIdentifier","src":"1414:2:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1385:3:7"},"nodeType":"YulFunctionCall","src":"1385:32:7"},"nodeType":"YulIf","src":"1382:2:7"},{"nodeType":"YulVariableDeclaration","src":"1453:37:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1480:9:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1467:12:7"},"nodeType":"YulFunctionCall","src":"1467:23:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1499:28:7","value":{"kind":"number","nodeType":"YulLiteral","src":"1509:18:7","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1503:2:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1554:26:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1563:6:7"},{"name":"value0","nodeType":"YulIdentifier","src":"1571:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1556:6:7"},"nodeType":"YulFunctionCall","src":"1556:22:7"},"nodeType":"YulExpressionStatement","src":"1556:22:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1542:6:7"},{"name":"_2","nodeType":"YulIdentifier","src":"1550:2:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1539:2:7"},"nodeType":"YulFunctionCall","src":"1539:14:7"},"nodeType":"YulIf","src":"1536:2:7"},{"nodeType":"YulVariableDeclaration","src":"1589:32:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1603:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"1614:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:7"},"nodeType":"YulFunctionCall","src":"1599:22:7"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1593:2:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1669:26:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1678:6:7"},{"name":"value0","nodeType":"YulIdentifier","src":"1686:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1671:6:7"},"nodeType":"YulFunctionCall","src":"1671:22:7"},"nodeType":"YulExpressionStatement","src":"1671:22:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1648:2:7"},{"kind":"number","nodeType":"YulLiteral","src":"1652:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1644:3:7"},"nodeType":"YulFunctionCall","src":"1644:13:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1659:7:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1640:3:7"},"nodeType":"YulFunctionCall","src":"1640:27:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1633:6:7"},"nodeType":"YulFunctionCall","src":"1633:35:7"},"nodeType":"YulIf","src":"1630:2:7"},{"nodeType":"YulVariableDeclaration","src":"1704:26:7","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1727:2:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1714:12:7"},"nodeType":"YulFunctionCall","src":"1714:16:7"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1708:2:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1753:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1755:16:7"},"nodeType":"YulFunctionCall","src":"1755:18:7"},"nodeType":"YulExpressionStatement","src":"1755:18:7"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1745:2:7"},{"name":"_2","nodeType":"YulIdentifier","src":"1749:2:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1742:2:7"},"nodeType":"YulFunctionCall","src":"1742:10:7"},"nodeType":"YulIf","src":"1739:2:7"},{"nodeType":"YulVariableDeclaration","src":"1784:20:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1798:1:7","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"1801:2:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1794:3:7"},"nodeType":"YulFunctionCall","src":"1794:10:7"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"1788:2:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1813:23:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1833:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1827:5:7"},"nodeType":"YulFunctionCall","src":"1827:9:7"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1817:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1845:56:7","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1867:6:7"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"1883:2:7"},{"kind":"number","nodeType":"YulLiteral","src":"1887:2:7","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1879:3:7"},"nodeType":"YulFunctionCall","src":"1879:11:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1896:2:7","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1892:3:7"},"nodeType":"YulFunctionCall","src":"1892:7:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1875:3:7"},"nodeType":"YulFunctionCall","src":"1875:25:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:7"},"nodeType":"YulFunctionCall","src":"1863:38:7"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1849:10:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1960:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1962:16:7"},"nodeType":"YulFunctionCall","src":"1962:18:7"},"nodeType":"YulExpressionStatement","src":"1962:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1919:10:7"},{"name":"_2","nodeType":"YulIdentifier","src":"1931:2:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1916:2:7"},"nodeType":"YulFunctionCall","src":"1916:18:7"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1939:10:7"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1951:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1936:2:7"},"nodeType":"YulFunctionCall","src":"1936:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1913:2:7"},"nodeType":"YulFunctionCall","src":"1913:46:7"},"nodeType":"YulIf","src":"1910:2:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1998:2:7","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2002:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1991:6:7"},"nodeType":"YulFunctionCall","src":"1991:22:7"},"nodeType":"YulExpressionStatement","src":"1991:22:7"},{"nodeType":"YulVariableDeclaration","src":"2022:17:7","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2033:6:7"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2026:3:7","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2055:6:7"},{"name":"_4","nodeType":"YulIdentifier","src":"2063:2:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2048:6:7"},"nodeType":"YulFunctionCall","src":"2048:18:7"},"nodeType":"YulExpressionStatement","src":"2048:18:7"},{"nodeType":"YulAssignment","src":"2075:22:7","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2086:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"2094:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2082:3:7"},"nodeType":"YulFunctionCall","src":"2082:15:7"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2075:3:7"}]},{"nodeType":"YulVariableDeclaration","src":"2106:22:7","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2121:2:7"},{"name":"_1","nodeType":"YulIdentifier","src":"2125:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:7"},"nodeType":"YulFunctionCall","src":"2117:11:7"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2110:3:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"2174:26:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2183:6:7"},{"name":"value0","nodeType":"YulIdentifier","src":"2191:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2176:6:7"},"nodeType":"YulFunctionCall","src":"2176:22:7"},"nodeType":"YulExpressionStatement","src":"2176:22:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2151:2:7"},{"name":"_5","nodeType":"YulIdentifier","src":"2155:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2147:3:7"},"nodeType":"YulFunctionCall","src":"2147:11:7"},{"name":"_1","nodeType":"YulIdentifier","src":"2160:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2143:3:7"},"nodeType":"YulFunctionCall","src":"2143:20:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2165:7:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2140:2:7"},"nodeType":"YulFunctionCall","src":"2140:33:7"},"nodeType":"YulIf","src":"2137:2:7"},{"nodeType":"YulVariableDeclaration","src":"2209:15:7","value":{"name":"value0","nodeType":"YulIdentifier","src":"2218:6:7"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2213:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"2278:118:7","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2299:3:7"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2317:3:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2304:12:7"},"nodeType":"YulFunctionCall","src":"2304:17:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2292:6:7"},"nodeType":"YulFunctionCall","src":"2292:30:7"},"nodeType":"YulExpressionStatement","src":"2292:30:7"},{"nodeType":"YulAssignment","src":"2335:19:7","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2346:3:7"},{"name":"_1","nodeType":"YulIdentifier","src":"2351:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2342:3:7"},"nodeType":"YulFunctionCall","src":"2342:12:7"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2335:3:7"}]},{"nodeType":"YulAssignment","src":"2367:19:7","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2378:3:7"},{"name":"_1","nodeType":"YulIdentifier","src":"2383:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2374:3:7"},"nodeType":"YulFunctionCall","src":"2374:12:7"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2367:3:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2244:1:7"},{"name":"_4","nodeType":"YulIdentifier","src":"2247:2:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2241:2:7"},"nodeType":"YulFunctionCall","src":"2241:9:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2251:18:7","statements":[{"nodeType":"YulAssignment","src":"2253:14:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2262:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"2265:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2258:3:7"},"nodeType":"YulFunctionCall","src":"2258:9:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2253:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"2237:3:7","statements":[]},"src":"2233:163:7"},{"nodeType":"YulAssignment","src":"2405:16:7","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2415:6:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2405:6:7"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1317:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1328:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1340:6:7","type":""}],"src":"1256:1171:7"},{"body":{"nodeType":"YulBlock","src":"2502:120:7","statements":[{"body":{"nodeType":"YulBlock","src":"2548:26:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2557:6:7"},{"name":"value0","nodeType":"YulIdentifier","src":"2565:6:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2550:6:7"},"nodeType":"YulFunctionCall","src":"2550:22:7"},"nodeType":"YulExpressionStatement","src":"2550:22:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2523:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2532:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2519:3:7"},"nodeType":"YulFunctionCall","src":"2519:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2544:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2515:3:7"},"nodeType":"YulFunctionCall","src":"2515:32:7"},"nodeType":"YulIf","src":"2512:2:7"},{"nodeType":"YulAssignment","src":"2583:33:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2606:9:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2593:12:7"},"nodeType":"YulFunctionCall","src":"2593:23:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2583:6:7"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2468:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2479:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2491:6:7","type":""}],"src":"2432:190:7"},{"body":{"nodeType":"YulBlock","src":"2728:102:7","statements":[{"nodeType":"YulAssignment","src":"2738:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2750:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2761:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2746:3:7"},"nodeType":"YulFunctionCall","src":"2746:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2738:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2780:9:7"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2795:6:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2811:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2816:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2807:3:7"},"nodeType":"YulFunctionCall","src":"2807:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"2820:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2803:3:7"},"nodeType":"YulFunctionCall","src":"2803:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2791:3:7"},"nodeType":"YulFunctionCall","src":"2791:32:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2773:6:7"},"nodeType":"YulFunctionCall","src":"2773:51:7"},"nodeType":"YulExpressionStatement","src":"2773:51:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2697:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2708:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2719:4:7","type":""}],"src":"2627:203:7"},{"body":{"nodeType":"YulBlock","src":"3042:573:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3052:32:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3070:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3081:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3066:3:7"},"nodeType":"YulFunctionCall","src":"3066:18:7"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3056:6:7","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3100:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3111:2:7","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3093:6:7"},"nodeType":"YulFunctionCall","src":"3093:21:7"},"nodeType":"YulExpressionStatement","src":"3093:21:7"},{"nodeType":"YulVariableDeclaration","src":"3123:17:7","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3134:6:7"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3127:3:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3149:27:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3169:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3163:5:7"},"nodeType":"YulFunctionCall","src":"3163:13:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3153:6:7","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3192:6:7"},{"name":"length","nodeType":"YulIdentifier","src":"3200:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3185:6:7"},"nodeType":"YulFunctionCall","src":"3185:22:7"},"nodeType":"YulExpressionStatement","src":"3185:22:7"},{"nodeType":"YulAssignment","src":"3216:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3227:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3238:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3223:3:7"},"nodeType":"YulFunctionCall","src":"3223:19:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3216:3:7"}]},{"nodeType":"YulVariableDeclaration","src":"3251:14:7","value":{"kind":"number","nodeType":"YulLiteral","src":"3261:4:7","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3255:2:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3274:29:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3292:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"3300:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3288:3:7"},"nodeType":"YulFunctionCall","src":"3288:15:7"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3278:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3312:13:7","value":{"name":"tail","nodeType":"YulIdentifier","src":"3321:4:7"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3316:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"3383:120:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3404:3:7"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3415:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3409:5:7"},"nodeType":"YulFunctionCall","src":"3409:13:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3397:6:7"},"nodeType":"YulFunctionCall","src":"3397:26:7"},"nodeType":"YulExpressionStatement","src":"3397:26:7"},{"nodeType":"YulAssignment","src":"3436:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3447:3:7"},{"name":"_1","nodeType":"YulIdentifier","src":"3452:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3443:3:7"},"nodeType":"YulFunctionCall","src":"3443:12:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3436:3:7"}]},{"nodeType":"YulAssignment","src":"3468:25:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3482:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"3490:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3478:3:7"},"nodeType":"YulFunctionCall","src":"3478:15:7"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3468:6:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3345:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"3348:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3342:2:7"},"nodeType":"YulFunctionCall","src":"3342:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3356:18:7","statements":[{"nodeType":"YulAssignment","src":"3358:14:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3367:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"3370:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3363:3:7"},"nodeType":"YulFunctionCall","src":"3363:9:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3358:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"3338:3:7","statements":[]},"src":"3334:169:7"},{"nodeType":"YulAssignment","src":"3512:11:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"3520:3:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3512:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3543:9:7"},{"name":"_1","nodeType":"YulIdentifier","src":"3554:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3539:3:7"},"nodeType":"YulFunctionCall","src":"3539:18:7"},{"name":"value1","nodeType":"YulIdentifier","src":"3559:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3532:6:7"},"nodeType":"YulFunctionCall","src":"3532:34:7"},"nodeType":"YulExpressionStatement","src":"3532:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3586:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3597:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3582:3:7"},"nodeType":"YulFunctionCall","src":"3582:18:7"},{"name":"value2","nodeType":"YulIdentifier","src":"3602:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3575:6:7"},"nodeType":"YulFunctionCall","src":"3575:34:7"},"nodeType":"YulExpressionStatement","src":"3575:34:7"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2995:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3006:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3014:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3022:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3033:4:7","type":""}],"src":"2835:780:7"},{"body":{"nodeType":"YulBlock","src":"3719:103:7","statements":[{"nodeType":"YulAssignment","src":"3729:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3741:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3752:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3737:3:7"},"nodeType":"YulFunctionCall","src":"3737:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3729:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:7"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3786:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3798:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3803:10:7","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3794:3:7"},"nodeType":"YulFunctionCall","src":"3794:20:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3782:3:7"},"nodeType":"YulFunctionCall","src":"3782:33:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3764:6:7"},"nodeType":"YulFunctionCall","src":"3764:52:7"},"nodeType":"YulExpressionStatement","src":"3764:52:7"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3699:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3710:4:7","type":""}],"src":"3620:202:7"},{"body":{"nodeType":"YulBlock","src":"4001:228:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4018:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4029:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4011:6:7"},"nodeType":"YulFunctionCall","src":"4011:21:7"},"nodeType":"YulExpressionStatement","src":"4011:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4052:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4063:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:7"},"nodeType":"YulFunctionCall","src":"4048:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"4068:2:7","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4041:6:7"},"nodeType":"YulFunctionCall","src":"4041:30:7"},"nodeType":"YulExpressionStatement","src":"4041:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4091:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4102:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4087:3:7"},"nodeType":"YulFunctionCall","src":"4087:18:7"},{"kind":"string","nodeType":"YulLiteral","src":"4107:34:7","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4080:6:7"},"nodeType":"YulFunctionCall","src":"4080:62:7"},"nodeType":"YulExpressionStatement","src":"4080:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4162:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4173:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4158:3:7"},"nodeType":"YulFunctionCall","src":"4158:18:7"},{"kind":"string","nodeType":"YulLiteral","src":"4178:8:7","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4151:6:7"},"nodeType":"YulFunctionCall","src":"4151:36:7"},"nodeType":"YulExpressionStatement","src":"4151:36:7"},{"nodeType":"YulAssignment","src":"4196:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4208:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4219:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4204:3:7"},"nodeType":"YulFunctionCall","src":"4204:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4196:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3978:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3992:4:7","type":""}],"src":"3827:402:7"},{"body":{"nodeType":"YulBlock","src":"4408:182:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4425:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4436:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4418:6:7"},"nodeType":"YulFunctionCall","src":"4418:21:7"},"nodeType":"YulExpressionStatement","src":"4418:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4459:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4470:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:7"},"nodeType":"YulFunctionCall","src":"4455:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"4475:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4448:6:7"},"nodeType":"YulFunctionCall","src":"4448:30:7"},"nodeType":"YulExpressionStatement","src":"4448:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4498:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4509:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4494:3:7"},"nodeType":"YulFunctionCall","src":"4494:18:7"},{"kind":"string","nodeType":"YulLiteral","src":"4514:34:7","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4487:6:7"},"nodeType":"YulFunctionCall","src":"4487:62:7"},"nodeType":"YulExpressionStatement","src":"4487:62:7"},{"nodeType":"YulAssignment","src":"4558:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4570:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4581:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4566:3:7"},"nodeType":"YulFunctionCall","src":"4566:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4558:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4385:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4399:4:7","type":""}],"src":"4234:356:7"},{"body":{"nodeType":"YulBlock","src":"4769:181:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4786:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4797:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4779:6:7"},"nodeType":"YulFunctionCall","src":"4779:21:7"},"nodeType":"YulExpressionStatement","src":"4779:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4820:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4831:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4816:3:7"},"nodeType":"YulFunctionCall","src":"4816:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"4836:2:7","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4809:6:7"},"nodeType":"YulFunctionCall","src":"4809:30:7"},"nodeType":"YulExpressionStatement","src":"4809:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4859:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4870:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4855:3:7"},"nodeType":"YulFunctionCall","src":"4855:18:7"},{"kind":"string","nodeType":"YulLiteral","src":"4875:33:7","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4848:6:7"},"nodeType":"YulFunctionCall","src":"4848:61:7"},"nodeType":"YulExpressionStatement","src":"4848:61:7"},{"nodeType":"YulAssignment","src":"4918:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4930:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4941:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4926:3:7"},"nodeType":"YulFunctionCall","src":"4926:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4918:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4746:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4760:4:7","type":""}],"src":"4595:355:7"},{"body":{"nodeType":"YulBlock","src":"5056:76:7","statements":[{"nodeType":"YulAssignment","src":"5066:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5078:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5089:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5074:3:7"},"nodeType":"YulFunctionCall","src":"5074:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5066:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5108:9:7"},{"name":"value0","nodeType":"YulIdentifier","src":"5119:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5101:6:7"},"nodeType":"YulFunctionCall","src":"5101:25:7"},"nodeType":"YulExpressionStatement","src":"5101:25:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5025:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5036:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5047:4:7","type":""}],"src":"4955:177:7"},{"body":{"nodeType":"YulBlock","src":"5184:189:7","statements":[{"body":{"nodeType":"YulBlock","src":"5223:115:7","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"5244:3:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5253:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5258:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5249:3:7"},"nodeType":"YulFunctionCall","src":"5249:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5237:6:7"},"nodeType":"YulFunctionCall","src":"5237:33:7"},"nodeType":"YulExpressionStatement","src":"5237:33:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5290:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5293:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5283:6:7"},"nodeType":"YulFunctionCall","src":"5283:15:7"},"nodeType":"YulExpressionStatement","src":"5283:15:7"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"5318:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"5323:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5311:6:7"},"nodeType":"YulFunctionCall","src":"5311:17:7"},"nodeType":"YulExpressionStatement","src":"5311:17:7"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5200:5:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5211:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5207:3:7"},"nodeType":"YulFunctionCall","src":"5207:6:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5197:2:7"},"nodeType":"YulFunctionCall","src":"5197:17:7"},"nodeType":"YulIf","src":"5194:2:7"},{"nodeType":"YulAssignment","src":"5347:20:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5358:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"5365:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5354:3:7"},"nodeType":"YulFunctionCall","src":"5354:13:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5347:3:7"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5166:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5176:3:7","type":""}],"src":"5137:236:7"},{"body":{"nodeType":"YulBlock","src":"5410:95:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5427:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5434:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5439:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5430:3:7"},"nodeType":"YulFunctionCall","src":"5430:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5420:6:7"},"nodeType":"YulFunctionCall","src":"5420:31:7"},"nodeType":"YulExpressionStatement","src":"5420:31:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5467:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5470:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5460:6:7"},"nodeType":"YulFunctionCall","src":"5460:15:7"},"nodeType":"YulExpressionStatement","src":"5460:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5491:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5494:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5484:6:7"},"nodeType":"YulFunctionCall","src":"5484:15:7"},"nodeType":"YulExpressionStatement","src":"5484:15:7"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5378:127:7"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value4, value4) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value4, value4) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value4, value4) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, 96)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c806376d58e1a1161006657806376d58e1a1461011f5780638da5cb5b14610130578063983d95ce146100a3578063eded3fda1461014b578063f2fde38b1461015a57600080fd5b80630fbf0a93146100a3578063150b7a02146100b8578063372500ab146100b6578063715018a6146100f5578063733bdef0146100fd575b600080fd5b6100b66100b1366004610522565b61016d565b005b6100d76100c636600461048c565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100b6610180565b61011061010b366004610472565b610192565b6040516100ec939291906105fa565b6100b661012d3660046105e2565b50565b6000546040516001600160a01b0390911681526020016100ec565b604051600081526020016100ec565b6100b6610168366004610472565b61027c565b6101756102f7565b61012d60018055565b565b610188610351565b61017e60006103ab565b6001600160a01b038116600090815260046020526040812060028101546003820154606093919290916101c4826103fb565b90508015610273578067ffffffffffffffff8111156101f357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50945060005b8181101561027157610234838261040b565b86828151811061025457634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061026981610647565b915050610222565b505b50509193909250565b610284610351565b6001600160a01b0381166102ee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61012d816103ab565b6002600154141561034a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102e5565b6002600155565b6000546001600160a01b0316331461017e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102e5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610405825490565b92915050565b6000610417838361041e565b9392505050565b600082600001828154811061044357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b80356001600160a01b038116811461046d57600080fd5b919050565b600060208284031215610483578081fd5b61041782610456565b6000806000806000608086880312156104a3578081fd5b6104ac86610456565b94506104ba60208701610456565b935060408601359250606086013567ffffffffffffffff808211156104dd578283fd5b818801915088601f8301126104f0578283fd5b8135818111156104fe578384fd5b89602082850101111561050f578384fd5b9699959850939650602001949392505050565b60006020808385031215610534578182fd5b823567ffffffffffffffff8082111561054b578384fd5b818501915085601f83011261055e578384fd5b8135818111156105705761057061066e565b8060051b604051601f19603f830116810181811085821117156105955761059561066e565b604052828152858101935084860182860187018a10156105b3578788fd5b8795505b838610156105d55780358552600195909501949386019386016105b7565b5098975050505050505050565b6000602082840312156105f3578081fd5b5035919050565b606080825284519082018190526000906020906080840190828801845b8281101561063357815184529284019290840190600101610617565b505050908301949094525060400152919050565b600060001982141561066757634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212209a0526ddc2852816c7d8edc36b6d4eac6f0e01094cb39596423f1ceaced69fc964736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76D58E1A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x76D58E1A EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x983D95CE EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xEDED3FDA EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFBF0A93 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x733BDEF0 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x16D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x48C JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x472 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEC JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x472 JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x188 PUSH2 0x351 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x0 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1C4 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x273 JUMPI DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x271 JUMPI PUSH2 0x234 DUP4 DUP3 PUSH2 0x40B JUMP JUMPDEST DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x254 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x269 DUP2 PUSH2 0x647 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x222 JUMP JUMPDEST POP JUMPDEST POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x284 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D DUP2 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 DUP3 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 DUP4 DUP4 PUSH2 0x41E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x443 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x483 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x417 DUP3 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4A3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4AC DUP7 PUSH2 0x456 JUMP JUMPDEST SWAP5 POP PUSH2 0x4BA PUSH1 0x20 DUP8 ADD PUSH2 0x456 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4DD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F0 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4FE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x50F JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x534 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x54B JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x55E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x570 PUSH2 0x66E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x595 JUMPI PUSH2 0x595 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x5B3 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x5D5 JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x5B7 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x633 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x617 JUMP JUMPDEST POP POP POP SWAP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x667 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 SDIV 0x26 0xDD 0xC2 DUP6 0x28 AND 0xC7 0xD8 0xED 0xC3 PUSH12 0x6D4EAC6F0E01094CB3959642 EXTCODEHASH SHR 0xEA 0xCE 0xD6 SWAP16 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"353:1823:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:88;;;;;;:::i;:::-;;:::i;:::-;;1964:209;;;;;;:::i;:::-;-1:-1:-1;;;1964:209:6;;;;;;;;;;;-1:-1:-1;;;;;;3782:33:7;;;3764:52;;3752:2;3737:18;1964:209:6;;;;;;;;1831:101:0;;;:::i;1150:590:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1890:66::-;;;;;;:::i;:::-;956:88;;1201:85:0;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;2773:51:7;;2761:2;2746:18;1201:85:0;2728:102:7;1748:78:6;;;1807:7;5101:25:7;;5089:2;5074:18;1748:78:6;5056:76:7;2081:198:0;;;;;;:::i;:::-;;:::i;956:88:6:-;2261:21:1;:19;:21::i;:::-;2303:20;1716:1;2809:22;;2629:209;1834:48:6;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;1150:590:6:-:0;-1:-1:-1;;;;;1331:21:6;;1252:15;1331:21;;;:12;:21;;;;;1373:14;;;;1414:20;;;;1223:27;;1373:14;;1414:20;;1465:26;1331:21;1465:24;:26::i;:::-;1445:46;-1:-1:-1;1506:13:6;;1502:231;;1563:9;1549:24;;;;;;-1:-1:-1;;;1549:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1549:24:6;;1536:37;;1593:13;1588:134;1620:9;1612:5;:17;1588:134;;;1679:27;:6;1700:5;1679:20;:27::i;:::-;1659:10;1670:5;1659:17;;;;;;-1:-1:-1;;;1659:17:6;;;;;;;;;;;;;;;;;;:47;1631:7;;;;:::i;:::-;;;;1588:134;;;;1502:231;1150:590;;;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;4029:2:7;2161:73:0::1;::::0;::::1;4011:21:7::0;4068:2;4048:18;;;4041:30;4107:34;4087:18;;;4080:62;-1:-1:-1;;;4158:18:7;;;4151:36;4204:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;2336:287:1:-:0;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:1;;4797:2:7;2460:63:1;;;4779:21:7;4836:2;4816:18;;;4809:30;4875:33;4855:18;;;4848:61;4926:18;;2460:63:1;4769:181:7;2460:63:1;1759:1;2598:7;:18;2336:287::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;4436:2:7;1414:68:0;;;4418:21:7;;;4455:18;;;4448:30;4514:34;4494:18;;;4487:62;4566:18;;1414:68:0;4408:182:7;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;11523:112:4:-;11583:7;11609:19;11617:3;4537:18;;4455:107;11609:19;11602:26;11523:112;-1:-1:-1;;11523:112:4:o;11977:135::-;12048:7;12082:22;12086:3;12098:5;12082:3;:22::i;:::-;12074:31;11977:135;-1:-1:-1;;;11977:135:4:o;4904:118::-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;-1:-1:-1;;;4997:18:4;;;;;;;;;;;;;;;;;4990:25;;4904:118;;;;:::o;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:858::-;490:6;498;506;514;522;575:3;563:9;554:7;550:23;546:33;543:2;;;597:6;589;582:22;543:2;625:29;644:9;625:29;:::i;:::-;615:39;;673:38;707:2;696:9;692:18;673:38;:::i;:::-;663:48;;758:2;747:9;743:18;730:32;720:42;;813:2;802:9;798:18;785:32;836:18;877:2;869:6;866:14;863:2;;;898:6;890;883:22;863:2;941:6;930:9;926:22;916:32;;986:7;979:4;975:2;971:13;967:27;957:2;;1013:6;1005;998:22;957:2;1058;1045:16;1084:2;1076:6;1073:14;1070:2;;;1105:6;1097;1090:22;1070:2;1155:7;1150:2;1141:6;1137:2;1133:15;1129:24;1126:37;1123:2;;;1181:6;1173;1166:22;1123:2;533:718;;;;-1:-1:-1;533:718:7;;-1:-1:-1;1217:2:7;1209:11;;1239:6;533:718;-1:-1:-1;;;533:718:7:o;1256:1171::-;1340:6;1371:2;1414;1402:9;1393:7;1389:23;1385:32;1382:2;;;1435:6;1427;1420:22;1382:2;1480:9;1467:23;1509:18;1550:2;1542:6;1539:14;1536:2;;;1571:6;1563;1556:22;1536:2;1614:6;1603:9;1599:22;1589:32;;1659:7;1652:4;1648:2;1644:13;1640:27;1630:2;;1686:6;1678;1671:22;1630:2;1727;1714:16;1749:2;1745;1742:10;1739:2;;;1755:18;;:::i;:::-;1801:2;1798:1;1794:10;1833:2;1827:9;1896:2;1892:7;1887:2;1883;1879:11;1875:25;1867:6;1863:38;1951:6;1939:10;1936:22;1931:2;1919:10;1916:18;1913:46;1910:2;;;1962:18;;:::i;:::-;1998:2;1991:22;2048:18;;;2082:15;;;;-1:-1:-1;2117:11:7;;;2147;;;2143:20;;2140:33;-1:-1:-1;2137:2:7;;;2191:6;2183;2176:22;2137:2;2218:6;2209:15;;2233:163;2247:2;2244:1;2241:9;2233:163;;;2304:17;;2292:30;;2265:1;2258:9;;;;;2342:12;;;;2374;;2233:163;;;-1:-1:-1;2415:6:7;1351:1076;-1:-1:-1;;;;;;;;1351:1076:7:o;2432:190::-;2491:6;2544:2;2532:9;2523:7;2519:23;2515:32;2512:2;;;2565:6;2557;2550:22;2512:2;-1:-1:-1;2593:23:7;;2502:120;-1:-1:-1;2502:120:7:o;2835:780::-;3081:2;3093:21;;;3163:13;;3066:18;;;3185:22;;;3033:4;;3261;;3238:3;3223:19;;;3288:15;;;3033:4;3334:169;3348:6;3345:1;3342:13;3334:169;;;3409:13;;3397:26;;3443:12;;;;3478:15;;;;3370:1;3363:9;3334:169;;;-1:-1:-1;;;3539:18:7;;;3532:34;;;;-1:-1:-1;3597:2:7;3582:18;3575:34;3520:3;3042:573;-1:-1:-1;3042:573:7:o;5137:236::-;5176:3;-1:-1:-1;;5197:17:7;;5194:2;;;-1:-1:-1;;;5237:33:7;;5293:4;5290:1;5283:15;5323:4;5244:3;5311:17;5194:2;-1:-1:-1;5365:1:7;5354:13;;5184:189::o;5378:127::-;5439:10;5434:3;5430:20;5427:1;5420:31;5470:4;5467:1;5460:15;5494:4;5491:1;5484:15"},"methodIdentifiers":{"claimRewards()":"372500ab","depositLiquidity(uint256)":"76d58e1a","getStakerInfo(address)":"733bdef0","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","pendingRewards()":"eded3fda","renounceOwnership()":"715018a6","stake(uint256[])":"0fbf0a93","transferOwnership(address)":"f2fde38b","withdraw(uint256[])":"983d95ce"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakeNftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stakedNfts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIdList\",\"type\":\"uint256[]\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIdList\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stake/PnftStaking.sol\":\"PnftStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/interfaces/IPefpNFT.sol\":{\"keccak256\":\"0x73884fff62fbd5aec98c00e8bed7865d86b7002a6e8d9e0d466c2cfbd78ebb05\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://207a9a7b96096ef8a43fc5505f0edb682386ba327e0a5cb3fddd70578a10d678\",\"dweb:/ipfs/QmWdKXhDcUCszbSi5BwWv2Xsa34i9qU26BuasWWP7oovWA\"]},\"contracts/stake/PnftStaking.sol\":{\"keccak256\":\"0x3d94fe1cac6d55148f7eb8ea76070c6b55f477aca0f9c71fec2e0c79c1be0d73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f05fdede94ca1760bf5225a1d52b93ad8d7a5643ce5631337d359950f854dab9\",\"dweb:/ipfs/QmPxds4BmhZJFzN1Yher83paTsgx8i1haBWGWSSZX8SA8c\"]}},\"version\":1}"}}}}}